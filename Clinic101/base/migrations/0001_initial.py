# Generated by Django 5.1.6 on 2025-02-20 17:19

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Dentist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dentistName",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="ชื่อทันตแพทย์"
                    ),
                ),
                (
                    "workDays",
                    models.CharField(
                        default="1,2,3,4,5", max_length=50, verbose_name="วันทำงาน"
                    ),
                ),
                (
                    "startTime",
                    models.TimeField(
                        default=datetime.time(9, 0), verbose_name="เวลาเริ่มทำงาน"
                    ),
                ),
                (
                    "endTime",
                    models.TimeField(
                        default=datetime.time(18, 0), verbose_name="เวลาหยุดทำงาน"
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Treatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "treatmentName",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="ประเภทการรักษา"
                    ),
                ),
                ("price", models.FloatField(blank=True, null=True)),
                (
                    "is_braces",
                    models.BooleanField(
                        default=False, verbose_name="เป็นการจัดฟันหรือไม่"
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False, verbose_name="พนักงานหน้าเคาน์เตอร์"
                    ),
                ),
                (
                    "is_manager",
                    models.BooleanField(default=False, verbose_name="เจ้าของคลินิก"),
                ),
                ("title", models.CharField(max_length=30, verbose_name="คำนำหน้าชื่อ")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "idCard",
                    models.CharField(
                        blank=True,
                        max_length=13,
                        null=True,
                        unique=True,
                        verbose_name="เลขประจำตัวประชาชน",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="เบอร์โทรศัพท์มือถือ",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True, max_length=500, null=True, verbose_name="ที่อยู่"
                    ),
                ),
                (
                    "birthDate",
                    models.DateField(blank=True, null=True, verbose_name="วันเกิด"),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("ชาย", "ชาย"), ("หญิง", "หญิง")],
                        default="ชาย",
                        max_length=10,
                        null=True,
                        verbose_name="เพศ",
                    ),
                ),
                (
                    "weight",
                    models.FloatField(blank=True, null=True, verbose_name="น้ำหนัก"),
                ),
                (
                    "height",
                    models.IntegerField(blank=True, null=True, verbose_name="ส่วนสูง"),
                ),
                (
                    "bloodType",
                    models.CharField(
                        choices=[("A", "A"), ("B", "B"), ("AB", "AB"), ("O", "O")],
                        max_length=10,
                        verbose_name="หมู่เลือด",
                    ),
                ),
                (
                    "ud",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="โรคประจำตัว",
                    ),
                ),
                (
                    "ud_symptoms",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="อาการโรคประจำตัว",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="Image", verbose_name="รูปภาพ"
                    ),
                ),
                (
                    "allergic",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="ข้อมูลการแพ้ยา",
                    ),
                ),
                (
                    "allergic_symptoms",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="อาการแพ้ยา"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(blank=True, null=True)),
                ("time_slot", models.TimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("รอดำเนินการ", "รอดำเนินการ"),
                            ("สำเร็จ", "สำเร็จ"),
                            ("ไม่สำเร็จ", "ไม่สำเร็จ"),
                        ],
                        default="รอดำเนินการ",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("detail", models.CharField(blank=True, max_length=100, null=True)),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dentist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.dentist",
                    ),
                ),
                (
                    "treatment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.treatment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TreatmentHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(verbose_name="รายละเอียดการรักษา")),
                (
                    "cost",
                    models.FloatField(blank=True, null=True, verbose_name="ค่าใช้จ่าย"),
                ),
                ("status", models.BooleanField(default=True, null=True)),
                (
                    "appointment",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.appointment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClosedDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "dentist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.dentist"
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("dentist", "date"), name="unique_dentist_date"
                    )
                ],
            },
        ),
    ]
